-- 1、身份历史表中没出现过的user身份设为 1(粉丝)，约占全量用户数据的90%，按2万一组分批执行。
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 0 and u.id < 20000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 20000 and u.id < 40000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 40000 and u.id < 60000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 60000 and u.id < 80000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 80000 and u.id < 100000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 100000 and u.id < 120000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 120000 and u.id < 140000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 140000 and u.id < 160000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 160000 and u.id < 180000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 180000 and u.id < 200000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 200000 and u.id < 220000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 220000 and u.id < 240000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 240000 and u.id < 260000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 260000 and u.id < 280000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 280000 and u.id < 300000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 300000 and u.id < 320000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 320000 and u.id < 340000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 340000 and u.id < 360000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 360000 and u.id < 380000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 380000 and u.id < 400000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 400000 and u.id < 420000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 420000 and u.id < 440000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 440000 and u.id < 460000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 460000 and u.id < 480000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 480000 and u.id < 500000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 500000 and u.id < 520000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 520000 and u.id < 540000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 540000 and u.id < 560000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 560000 and u.id < 580000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 580000 and u.id < 600000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 600000 and u.id < 620000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 620000 and u.id < 640000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 640000 and u.id < 660000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 660000 and u.id < 680000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 680000 and u.id < 700000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 700000 and u.id < 720000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 720000 and u.id < 740000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 740000 and u.id < 760000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 760000 and u.id < 780000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 780000 and u.id < 800000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 800000 and u.id < 820000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 820000 and u.id < 840000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 840000 and u.id < 860000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 860000 and u.id < 880000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 880000 and u.id < 900000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 900000 and u.id < 920000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 920000 and u.id < 940000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 940000 and u.id < 960000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 960000 and u.id < 980000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 980000 and u.id < 1000000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1000000 and u.id < 1020000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1020000 and u.id < 1040000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1040000 and u.id < 1060000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1060000 and u.id < 1080000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1080000 and u.id < 1100000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1100000 and u.id < 1120000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1120000 and u.id < 1140000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1140000 and u.id < 1160000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1160000 and u.id < 1180000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1180000 and u.id < 1200000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1200000 and u.id < 1220000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1220000 and u.id < 1240000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1240000 and u.id < 1260000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1260000 and u.id < 1280000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1280000 and u.id < 1300000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1300000 and u.id < 1320000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1320000 and u.id < 1340000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1340000 and u.id < 1360000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1360000 and u.id < 1380000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1380000 and u.id < 1400000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1400000 and u.id < 1420000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1420000 and u.id < 1440000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1440000 and u.id < 1460000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1460000 and u.id < 1480000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1480000 and u.id < 1500000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1500000 and u.id < 1520000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1520000 and u.id < 1540000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1540000 and u.id < 1560000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1560000 and u.id < 1580000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1580000 and u.id < 1600000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1600000 and u.id < 1620000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1620000 and u.id < 1640000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1640000 and u.id < 1660000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1660000 and u.id < 1680000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1680000 and u.id < 1700000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1700000 and u.id < 1720000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1720000 and u.id < 1740000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1740000 and u.id < 1760000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1760000 and u.id < 1780000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1780000 and u.id < 1800000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1800000 and u.id < 1820000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1820000 and u.id < 1840000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1840000 and u.id < 1860000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1860000 and u.id < 1880000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1880000 and u.id < 1900000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1900000 and u.id < 1920000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1920000 and u.id < 1940000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1940000 and u.id < 1960000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1960000 and u.id < 1980000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 1980000 and u.id < 2000000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 2000000 and u.id < 2020000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 2020000 and u.id < 2040000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 2040000 and u.id < 2060000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 2060000 and u.id < 2080000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 2080000 and u.id < 2100000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 2100000 and u.id < 2120000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 2120000 and u.id < 2140000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 2140000 and u.id < 2160000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 2160000 and u.id < 2180000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 2180000 and u.id < 2200000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 2200000 and u.id < 2220000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 2220000 and u.id < 2240000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 2240000 and u.id < 2260000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 2260000 and u.id < 2280000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 2280000 and u.id < 2300000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 2300000 and u.id < 2320000;
update user u set u.identity = 1, u.update_time = u.update_time where u.id not in (select distinct user_id from user_role_transaction) and u.id >= 2320000;

-- 2、根据身份历史表更新user表，约占全量用户数据的10%，按30万一组分批执行
UPDATE user u JOIN user_role_transaction urt ON urt.user_id = u.id SET u.identity = urt.user_identity, u.update_time = u.update_time WHERE urt.user_id = u.id AND NOT exists(SELECT 1 FROM user_role_transaction urt2 WHERE urt2.user_id = urt.user_id AND urt2.id > urt.id) and u.id >= 0 and u.id < 300000;
UPDATE user u JOIN user_role_transaction urt ON urt.user_id = u.id SET u.identity = urt.user_identity, u.update_time = u.update_time WHERE urt.user_id = u.id AND NOT exists(SELECT 1 FROM user_role_transaction urt2 WHERE urt2.user_id = urt.user_id AND urt2.id > urt.id) and u.id >= 300000 and u.id < 600000;
UPDATE user u JOIN user_role_transaction urt ON urt.user_id = u.id SET u.identity = urt.user_identity, u.update_time = u.update_time WHERE urt.user_id = u.id AND NOT exists(SELECT 1 FROM user_role_transaction urt2 WHERE urt2.user_id = urt.user_id AND urt2.id > urt.id) and u.id >= 600000 and u.id < 900000;
UPDATE user u JOIN user_role_transaction urt ON urt.user_id = u.id SET u.identity = urt.user_identity, u.update_time = u.update_time WHERE urt.user_id = u.id AND NOT exists(SELECT 1 FROM user_role_transaction urt2 WHERE urt2.user_id = urt.user_id AND urt2.id > urt.id) and u.id >= 900000 and u.id < 1200000;
UPDATE user u JOIN user_role_transaction urt ON urt.user_id = u.id SET u.identity = urt.user_identity, u.update_time = u.update_time WHERE urt.user_id = u.id AND NOT exists(SELECT 1 FROM user_role_transaction urt2 WHERE urt2.user_id = urt.user_id AND urt2.id > urt.id) and u.id >= 1200000 and u.id < 1500000;
UPDATE user u JOIN user_role_transaction urt ON urt.user_id = u.id SET u.identity = urt.user_identity, u.update_time = u.update_time WHERE urt.user_id = u.id AND NOT exists(SELECT 1 FROM user_role_transaction urt2 WHERE urt2.user_id = urt.user_id AND urt2.id > urt.id) and u.id >= 1500000 and u.id < 1800000;
UPDATE user u JOIN user_role_transaction urt ON urt.user_id = u.id SET u.identity = urt.user_identity, u.update_time = u.update_time WHERE urt.user_id = u.id AND NOT exists(SELECT 1 FROM user_role_transaction urt2 WHERE urt2.user_id = urt.user_id AND urt2.id > urt.id) and u.id >= 1800000 and u.id < 2100000;
UPDATE user u JOIN user_role_transaction urt ON urt.user_id = u.id SET u.identity = urt.user_identity, u.update_time = u.update_time WHERE urt.user_id = u.id AND NOT exists(SELECT 1 FROM user_role_transaction urt2 WHERE urt2.user_id = urt.user_id AND urt2.id > urt.id) and u.id >= 2100000;
